import requests
import os
from bs4 import BeautifulSoup
from dotenv import load_dotenv

# TODO: HMC and Scripps don't use this so we need to use their own login portal
# TODO: also get name from my.pomona.edu or wherever
def main(login_info):
    # dictionary containing email, username, password
    load_dotenv()
    # login_info['execution'] = "fd5f2820-2457-436f-a0dd-a133c64bb77f_ZXlKaGJHY2lPaUpJVXpVeE1pSXNJblI1Y0NJNklrcFhWQ0o5Li1PUk9DRHBxRkFQcG5fY3Z2aWRnOGNaaTVPcF9jUm0xZHI2V0VwbmxwSVNGNmZ4ZC1vUVdWVjBVOFFIbmNLTEFGdmM0ZTZqQTgzS1Q4ZGhvWUJpYndnRXhjb1pha081U2xHaHY0UWhPRE1DV2NyVk5PNXNRdC1Gck45NEdRcWMtZTM4NEJ0bE1wMEdSZjFXS21iRFZGNTJ2UXMxUGM2LWV2MVZqZV9NRVBQYkZianQ1SF9XSUZ6azZwOE1IUUE0N0VubDFhOTZmNEY2V2djdmNldURGS0R4UGtfR1lVZjA3OUhWX016Tnk3Z0VrWTB2am1kV3BxMy0wcW9PYmptSURDb0d6N0xIaTRBeWNsSG1NSHNLTGRLdVQ2ZklWcEk5ZXcyY294a25ycTkyak44RFJBU3BZTXJyVzFyVXFta2R5S0NFazI4eDJ4OE5ackhkLVdWVC1nR3R4RXVsd0xfYjNqbkd0X19XbXlHanhHZGVZTks1dS1zR3kyWkljNzB4cDJIWHVUSGdGSVRDUndjWm5yVlJuLVVZR01raXpzNk8yYVV0NVdfTVFKQ2ZhMVZhWGU5cDNJbm1oYTBBVUNOQ1dESXdNazNadVJvZ0Q5T0E2bnFDX1lad040SEdURnlYZk5aaVlFdHE0WU1lY25WWjhxWS0ta2RTNEhqWTRoc0JGUGJSU1pWU2dPaDYzSlZQcksxQUZVZXAwNkdGc0FLdWVYOFlJTDhvZTdFa0MxR2h3ckFoVkNQXzhLeW1ISUI3VDIzMlZOYnY0ZHR0SmdzYVkzNnF1azdyMTJ3RURUM1pPdFVYLTNNbldEUGVfR3RHdHdTblNnLXF4Y3ZSV21NM21HQWk3amNnUVBUakUzNkUtSjdkUHNXRjJ1ZU81T28wd0FzTnNQXzFnUDlVenRpbzYyZW5iVjJjMlNYWTR1ZnZoblBCM3pMeGRDUm9WWkVPeklGU3UzUmttVWkzR2NVSU85Nkd0Q2FnWVh0QnQ5VngtMnRoQnVpck0xTVlQbDlyUF9mMFZISnd3dk9ZckNPTFllMXNqYkFXaEZ6cU9fM0Q1ekg1YTNOcnBjS1F4QnNRaklfZlhVX29PV2tOMVBfbE4wOVJUVk02d09DVzhfRkg1dzh4YXlkM1h0d19iMnlZQ05OejZsa3dyN1AwTU1qbnpFdmIzZ3JveTJDcHRZbzZLd1ZHQkVqLUduaTZVbXFyX2RrV21WWlQ5dHM3MVI1VWMzbGdIaDk4WExob1h3Tk5VM09ZaWUweFVjcUhzM0d6WEZUd0pvZ3ZVYUFyUFhoYmJxR285MnFKUVhNY0JaaWN1eHNCeDdVS2NjV0U1cnhYRjBnZnVuZnJMcEhvQ05rSVlLLXBOU0FocFJFbFlYS3Y0QzVfbm1xZWZRVGk4d09LUlpCQXJCRVNwYzBZbzhucnVVMnFpaWEzUUlEUDhpb3M0aEF1Vi1OMUs4QkNIYkF4WHpmMzgyVzVxNW1MVWotR05oV0taRkNBVkxoTUlCd2tnb012TWtNNUNOUXhxcGE0Q2xaUDRLZWNKWEFQWElJbjVlbmhUaTVqZExyOWFpUzNrN3N6cmlWV3hjRnFMZjNhQWZULWJGc0hMWmVORk9hMExSRE9TM28zeS00aHhmR2gyTml3cmVnb0JOa0lHNjd1QUhvN3o0amdFdUhjSW5jbmY4NEl3SFkzalh1ZTZiWnBkdTBvd0VXR2lxMjBVRDJZcWwzRlRqcVl2OF9kMk5oY3hKSTEwNU5aOWxweEFFeEFadDIxUTF2ZFd5eFVfbERBek9OQ3lIQmpYWHBCSDdubXQ3TzRTUDZiSEhSU2xZU1hkQUVuV3BfMGNxR1AtZlJfV1pPbWx0OFpNSzRXQ0prZW13c0EtTnRMRENlUHRTQkNHZVRzbnVzRFB2N0RodnZPLUVNOG8yTko1ZXdLdklsWWxmTEQta0pabnNwRmkzLV90WDhiaFR5RUgzSjQzWU1YeEExdDlBTmtnQkt5U2NpbUdrTEw1MEFVSkhTTWNSZUxKRWQ2Z04wdnk5cXg4MGplcmdrbXZGakhZd210RDVOODNxUEI2eWZtakZxVkpHRnp6MXhodnI4MW1Ea3YwWFEyXzFkMWJmYVUzM3dMOEZBbmFyOHdBdG5tZGxZZUpMdFJsSTVpUTlfaUNuVGtidnZsX09rRnpnTU5IVXRBS3FLaG1OSDRWNU95NWdFb2tub0NySF9oQlhCYy1EOGtlTi1wY3dJdXZIblkyTnBHNjlvUW9CRHVSX0I0Rm5rWnZYSTBHZVFtdVVNR0JDQjdnbkNQNkMyR013eUc5V3JWRm1yTi1RVDJaeGhseHBZNHlQWER5NDQ1TjZCc1NVNmRvR2NPX29SaU5CYjNTOHk2VzZINExBSkhraGo0ZjdHeFBzQVdNQ2JMUGpqSE11NE5UQ0JQR3p6ekFsWGFLRV9PWmpzOTB2Z1pqR0RWQnBjMEZhajhXeGFPeE1UQlVEelBEQ0NjcklETVN4LTVMWGdCbFNxOGhkTFJ0UkNMRmcxLW5QR1V4MmxMa3J6LVRiSHJ0Ni11TmtIMW53MERqb1RuR0xjTHZ6YkRjcUVJUlFLd2NhZFNyUzZhOExwejFQYnNzUjhuSExuOS1uc3hqYnphZUF6ZmJtaDhtS0xvTGhTdXN6TjJqTERwUkg4amhob20yQ2k2Y0I5aGxpMXp0aWhNZ3FPbkgzLVdvb1BGQkRSRFR4QkVjTm5nYm5fUkUwZmJFX3NqdGRqdzRDTnlVUUhJckZKQXgwZFRhaUtyd1R1RktSbnphb3ZwYkFtNHdqSURYZm10N3FfRWFlM1BDRDZCeU9IY2JoMW9EaXhUUzJJc0hENEEwWk15SmdjM0gxWWR2MjU3cG9qVGtfa29HcnlyOGl2eWM1RnBES3hPSm5NTDhzU19HUng4TkdJcGFaaUVxQ04yTHgwODFSSWZLQ05JSmJHNkNwaU43a3hIOFAzT2psNnU2YUdGLVNUSG14RjZFTHBGWWVJaGMzcFB6ellJVVgzZFNhSU1XMmlFTndqR3Q4ckFqTVcwSElqMGJZSDVDcnA4Q0JDeHdTa2t0cEpjY3NPLVRZMFBtRkhVUmRkcUZvUk9ycWVuUW9xZ3BzOFNaa2VsbjBxQm5kS1dVSmZsWXpKMUdfTXBnTE41bGFaNEc3Rno2bHhHTFg5NDV2Q0ZGUGdhTDdBVTI2b3NudFJuSmE0RkRyVUlGX2llX08zd0tKSnI0R211dDJWeFdobE9hSlh1bHg4YjBpSXZPOVBNMUwxLXZOb2RFbUJQYjdzYUhFX05PV2ZHbDM1RzVUalNEZURZclVaN25MZkdSNFBnTWlGNm9sd0xLS05IV3dZbWFTalg3LU1zMDFqRTB4TGJGTVlVTkpmYTk2NjFzTEVKYTI5VGZUcGlld1pBeldrTGc4dHVDZ05iSTlWdGVJYV9Yd0QyRUZ3TjV3ZGNBUF8tMnF4Z01yYzVaT3pIR003a3VJb2p1c3FocW5mRXAzY0RYcGp0cVl0RXFlTnFUcVNsWUs2d0t0WW9FQVh2Q2t5RVlYMXpibEE1MmNoY2xfdWJqRDF5OWlnWnpsRTRMOWo2X3JBUERHU09Bc3FNckdQMFRTYmhNblpxLUJ5UjNXUlZhc05jRTZNRmppeWp0QWtZMHZoOXhBLXROSTNpQTlaSU01NzZRTTZMTHA4bmxlcUhmbkxPMTNIY0hFWGpqekJTaE9pVzlUbkp4TldEUERhalJsWVpmZWlYR2dmSF9KM1d3bHhXTURvWnVTNkhSY0Z4aHQxd1d0dFpBMUt2QnF0MjZNbGJRelpOSG5fTGtRc2pwYlVqaDFfRzVRR3hyOUliMVgyLXotZTVnNjJOZlkyWnhtaEN3OTZyUzZ6eGhKVkJ1WEp2dHJiR1B0a0duQVZuS0plaXZ4Y21VLUdRc0xiZTBlN3BueG1xVnV5dURsNXMwWktfVTlEcTRjRjNHYTQ0Ti1BdFF3akZlNmIxZ1Zodm9idDVFdWtqbl9ldUJwTGowX0xPVlFQS2JlSGFZQlJuM3ctTDRVZWtvLXdtN0Y4VWlJSVFJWU9FdVFSWVlWVnRIazF3dzFPY2JJTzRzb2Y3a1pMUDl2MURQUmpZemZOOTV3S1FLUk9hN1hzSzRBTDBJV2YwVmc1b2pWU1BkR3FTRjJtdG9nRnZ6aVd2Z3gxQ2Y2aDY4NmlOdGw4TURGZzAwRXFiZ3VxUDMzekFzRmlIV3I2Uk9fdmhpbnVsTTJUdEszQ0FRdjRvWXY4MUE2VTU1UmluV0xkOFdJbTdMVTc3QmFDV1J6ck5hcEJnTEhoYmJFVGZ3MFJ0UVBpOW1hNUh5UFpZbUtkT0FPUnhpb0t5QjQ0V0tMbXBFWWxBa1lJdS1VMTRXaVpkZ1hEekl1M2RCckNVNEMtVkRJUFY5bWhKQUo4OVlIRm1OM2k2ZlczUExQSlRpcDZaWkhvTWJqdXNDc2FnQ0tCT2FqNXhkU2JMODVBWDV4Z1JMN0RlMXdOSV9ZTUJoLTlTbXdobnhXYjZDVmg2c204LXdnNEd2bHlqQVlxMVk3YW1LbW5GM09IeU9VbWN2V1VmbHVIcmgyVF9STjlFdVBKY2JVTWd4RnhaRGxSeUFuam5KWnA1WG5qMVpmbmttN25sNFhxQ0lDMVR2LTNrRkUtUGdVTjZKR0lUd3VXcEpVcVc4UjFLSFVzeXZEUlRQTU1hNmJRLklsb2VBM2Y2OEJZWngzcjJ1bjN3RndBY0lCVlpqU09pMjJWUktOQ1Vab1c5MS13STduUDU5aVoyRUIyaEVSRmxzYl9KdDYzaDdZSktldnZCQ1JKMjVR"
    login_info['execution'] = os.getenv("EXECUTION")
    login_info['_eventId'] = "submit"

    # general cas login - login info will be save for login
    request_url = "https://webauth.claremont.edu/cas/login"

    # request session to keep login cookies
    with requests.Session() as s:

        # login POST request TODO: if response is not 200, do smth about it
        cas = s.post(request_url, data=login_info)
        return s.cookies.get_dict()
